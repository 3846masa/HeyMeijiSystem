// Generated by CoffeeScript 1.8.0
(function() {
  var $, icalButton, makeICal;

  $ = Sizzle;

  Date.prototype.toISOString = function() {
    var pad;
    pad = function(number) {
      if (number < 10) {
        return '0' + number;
      } else {
        return number;
      }
    };
    return '' + this.getFullYear() + pad(this.getMonth() + 1) + pad(this.getDate()) + 'T' + pad(this.getHours()) + pad(this.getMinutes()) + pad(this.getSeconds());
  };

  makeICal = function() {
    var OPTS, cal, dateStr, event, infos, infosNode, period, periodTable, subject, subjectNode, tabelHtml, table, timeTable, week, weekList, weekName, _i, _j, _k, _len, _ref;
    OPTS = {};
    OPTS['start'] = new Date();
    if ($('#beginTerm')[0].value === 10) {
      OPTS['end'] = new Date(new Date().getFullYear(), 9, 1);
    } else {
      OPTS['end'] = new Date(new Date().getFullYear() + 1, 4, 1);
    }
    timeTable = {};
    weekList = ['mo', 'tu', 'we', 'th', 'fr', 'sa'];
    for (_i = 0, _len = weekList.length; _i < _len; _i++) {
      weekName = weekList[_i];
      timeTable[weekName] = {};
    }
    tabelHtml = $('.calenderLayout > table[summary=layoutTable]')[0];
    for (week = _j = 0, _ref = weekList.length; 0 <= _ref ? _j < _ref : _j > _ref; week = 0 <= _ref ? ++_j : --_j) {
      for (period = _k = 1; _k <= 7; period = ++_k) {
        weekName = weekList[week];
        subjectNode = $("td", $(".classTitle", tabelHtml)[period - 1])[week];
        infosNode = $("td", $(".classDetail", tabelHtml)[period - 1])[week];
        subject = subjectNode.innerText.replace(/( |\s|\n|\r)/g, '');
        infos = infosNode.innerText.replace(/( |　|\t)/g, '').split('\n').filter(function(item) {
          return item !== '';
        });
        timeTable[weekName][period] = {
          subject: subject !== '' ? subject : null,
          lecturer: infos[0],
          room: infos[1]
        };
      }
    }
    periodTable = {
      1: {
        start: "09:00",
        end: "10:30"
      },
      2: {
        start: "10:40",
        end: "12:10"
      },
      3: {
        start: "13:00",
        end: "14:30"
      },
      4: {
        start: "14:40",
        end: "16:10"
      },
      5: {
        start: "16:20",
        end: "17:50"
      },
      6: {
        start: "18:00",
        end: "19:30"
      },
      7: {
        start: "19:40",
        end: "21:10"
      }
    };
    cal = new iCal();
    for (weekName in timeTable) {
      table = timeTable[weekName];
      for (period in table) {
        infos = table[period];
        week = weekList.indexOf(weekName);
        dateStr = new Date(OPTS['start'].getTime() + ((week + 8 - OPTS['start'].getDay()) % 7) * 1000 * 60 * 60).toDateString();
        if ((infos['subject'] != null)) {
          event = {};
          event.dtstart = new Date("" + dateStr + " " + periodTable[period]['start']).toISOString();
          event.dtend = new Date("" + dateStr + " " + periodTable[period]['end']).toISOString();
          event.summary = infos.subject;
          event.location = infos.room;
          event.description = infos.lecturer;
          event.rrule = "FREQ=WEEKLY;" + (OPTS['end'] != null ? "" : "UNTIL=" + OPTS['end'] + ";") + ("BYDAY=" + (weekName.toUpperCase()) + ";");
          cal.addEvent(event);
        }
      }
    }
    return saveTextAs(cal["export"](), "時間割_" + $('#userId')[0].value + ".ics");
  };

  $('.btnS>button')[0].removeAttribute('onclick');

  icalButton = $('.btnS')[0].cloneNode(true);

  icalButton.classList.add('ical');

  $('button', icalButton)[0].addEventListener('click', makeICal);

  $('button>span', icalButton)[0].textContent = '時間割iCalダウンロード';

  $('.btnS:not(.ical):not(.pdf)')[0].style.paddingRight = 0;

  $('.btnS:not(.ical):not(.pdf)')[0].parentNode.insertBefore(icalButton, null);

}).call(this);
